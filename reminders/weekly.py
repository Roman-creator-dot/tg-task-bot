import os
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from sqlalchemy.ext.asyncio import async_sessionmaker
from aiogram import Bot

from db.models import User, Task
from db.queries import get_leaderboard_data
from bot.reactions import send_message_with_reactions


# –§—É–Ω–∫—Ü–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–ø–∞
import os
from sqlalchemy import select
from aiogram import Bot
from sqlalchemy.ext.asyncio import async_sessionmaker
from db.models import User, Task
from db.queries import get_leaderboard_data  # —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞

#  –û—Ç–ø—Ä–∞–≤–∫–∞ heartbeat –∞–¥–º–∏–Ω—É (–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)
async def heartbeat_admin(bot: Bot):
    admin_id = os.getenv("ADMIN_ID")
    if admin_id:
        try:
            await bot.send_message(int(admin_id), "ü§ñ –ï—â—ë –∂–∏–≤–æ–π!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ heartbeat –∞–¥–º–∏–Ω—É: {e}")

async def weekly_reminder(bot: Bot, session_maker: async_sessionmaker):
    print("üîÅ –ó–∞–ø—É—â–µ–Ω weekly_reminder...")

    async with session_maker() as session:
        result = await session.execute(select(User))
        users = result.scalars().all()
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")

        for user in users:
            task_result = await session.execute(
                select(Task).where(Task.user_id == user.id, Task.completed == False)
            )
            active_tasks = task_result.scalars().all()

            try:
                if active_tasks:
                    print(f"üì¨ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username} (ID: {user.id})")
                    await bot.send_message(
                        user.id,
                        "üîî –ü—Ä–∏–≤–µ—Ç! –£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏. –ù–µ –∑–∞–±—É–¥—å –∏—Ö –≤—ã–ø–æ–ª–Ω–∏—Ç—å üí™"
                    )
                else:
                    print(f"‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id})")
                    await bot.send_message(
                        user.id,
                        "üéâ –ú–æ–ª–æ–¥–µ—Ü, –≤—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –°–∞–º–æ–µ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é üòâ"
                    )
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ø–∞
        print("üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤...")
        leaderboard_data = await get_leaderboard_data()

        if leaderboard_data:
            leaderboard_text = "üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–¥–µ–ª–∏:\n"
            for i, row in enumerate(leaderboard_data, 1):
                leaderboard_text += f"{i}. {row['username']} ‚Äî {row['score']} –æ—á–∫–æ–≤\n"
        else:
            leaderboard_text = "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª –æ—á–∫–æ–≤ üí§"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç (ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
        group_chat_id = os.getenv("CHAT_ID")
        if group_chat_id:
            try:
                group_chat_id = int(group_chat_id)
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ø–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç {group_chat_id}")
                await  send_message_with_reactions(bot,chat_id=group_chat_id, text=leaderboard_text)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–ø–∞ –≤ –≥—Ä—É–ø–ø—É: {e}")
        else:
            print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
def start_reminders(scheduler: AsyncIOScheduler, bot: Bot, session_maker: async_sessionmaker):
    scheduler.add_job(
        weekly_reminder,
        trigger="interval",
        minutes=15,
        args=[bot, session_maker],
    )
    # üîÅ –§–µ–π–∫–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É (–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)
    scheduler.add_job(
        heartbeat_admin,
        trigger="interval",
        minutes=1,
        args=[bot],
    )
    scheduler.start()
