# –§–∞–π–ª: bot/handlers.py
from aiogram import Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
import os
import sys
from dotenv import load_dotenv

load_dotenv()
# –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ª–æ–≥–∏–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
ID_CHAT = os.getenv("CHAT_ID")
print(f"ID_CHAT: {ID_CHAT}")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —á–∞—Ç–∞

from bot.services import (
    add_user_into_db,
    handle_task_text_received,
    get_weekly_leaderboard,
    get_user_tasks,
    complete_task_by_id
    
)
from bot.keyboards import main_menu_kb, tasks_inline_kb
from bot.states import AddTaskState

# –°—Ç–∞—Ä—Ç –∏–ª–∏ –º–µ–Ω—é: –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start_handler(message: Message):
    print("üëâ –í—ã–∑–≤–∞–Ω start_handler")
    await message.answer( "**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** üëã\n\n"
        "–ó–¥–µ—Å—å –º—ã —Å–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á–∏, –≤—ã–ø–æ–ª–Ω—è–µ–º –∏—Ö –∏ –ø–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.\n\n"
        "üìå **–ü—Ä–∞–≤–∏–ª–∞:**\n"
        "‚Ä¢ –ó–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ ‚Äî **10 –±–∞–ª–ª–æ–≤**\n"
        "‚Ä¢ –ó–∞ —Ç–æ, —á—Ç–æ –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é ‚Äî **1 –±–∞–ª–ª**\n\n"
        "–°–ª–µ–¥–∏ –∑–∞ –∑–∞–¥–∞—á–∞–º–∏, —Ä–µ–∞–≥–∏—Ä—É–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏!\n"
        "–£–¥–∞—á–∏", reply_markup=main_menu_kb())
    await add_user_into_db(message)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î

# –ö–æ–º–∞–Ω–¥–∞: –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
async def add_task_command(message: Message, state: FSMContext):
    print("üëâ –í—ã–∑–≤–∞–Ω add_task_command")
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await message.answer("‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É:")
    await state.set_state(AddTaskState.waiting_for_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ –¢–û–õ–¨–ö–û –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
async def task_text_handler(message: Message, state: FSMContext):
    print("üëâ –í—ã–∑–≤–∞–Ω task_text_handler")
    await handle_task_text_received(message)
    await state.clear()

# –ö–æ–º–∞–Ω–¥–∞: –ú–æ–∏ –∑–∞–¥–∞—á–∏ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def my_tasks_command(message: Message):
    print("üëâ –í—ã–∑–≤–∞–Ω my_tasks_command")
    tasks = await get_user_tasks(message.from_user.id)
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    if not tasks:
        await message.answer("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á ‚úèÔ∏è")
    else:
        await message.answer("üìã –¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:", reply_markup=tasks_inline_kb(tasks))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
async def complete_task_callback(call: CallbackQuery):
    print("üëâ –í—ã–∑–≤–∞–Ω complete_task_callback")
    await complete_task_by_id(call)

# –ö–æ–º–∞–Ω–¥–∞ /—Ç–æ–ø ‚Äî —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤
async def leaderboard_handler(message: Message):
    print("üëâ –í—ã–∑–≤–∞–Ω leaderboard_handler")
    text = await get_weekly_leaderboard()
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await message.bot.send_message(message.chat.id, text=text)

# –ö–æ–º–∞–Ω–¥–∞ /chatid ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞
async def get_chat_id(message: Message):
    print("üëâ –í—ã–∑–≤–∞–Ω get_chat_id")
    print("Chat ID:", message.chat.id)
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await message.answer(f"Chat ID: `{message.chat.id}`", parse_mode="Markdown")
    
    


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_handlers(dp: Dispatcher):
    print("üîß –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã...")
    dp.message.register(start_handler, Command(commands=["start", "–º–µ–Ω—é"]))
    dp.message.register(add_task_command, F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
    dp.message.register(my_tasks_command, F.text == "üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏")
    dp.message.register(task_text_handler, AddTaskState.waiting_for_text)
    dp.callback_query.register(complete_task_callback, F.data.startswith("complete:"))
    dp.message.register(leaderboard_handler, F.text == "üìä —Ç–æ–ø")
    dp.message.register(get_chat_id, F.text == "/chatid")
