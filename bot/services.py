from aiogram.types import Message, CallbackQuery
from db.queries import (
    add_task_to_db,
    add_user,
    mark_task_complete,
    get_user_active_tasks,
    get_leaderboard_data,
)
from bot.reaction_utils import get_reaction, get_all_emojis_for_message
from bot.reactions import send_message_with_reactions  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–∞–∫—Ü–∏–∏
import os

ID_CHAT = os.getenv("CHAT_ID")
print(f"ID_CHAT: {ID_CHAT}")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —á–∞—Ç–∞  

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def add_user_into_db(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.full_name
    await add_user(user_id, username)
 

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π –≤ –≥—Ä—É–ø–ø—É
async def handle_task_text_received(message: Message):
    text = message.text.strip()
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.full_name

    await add_task_to_db(user_id=user_id, username=username, text=text)
    await message.answer("–ó–∞–¥–∞—á–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ ‚úÖ")

    group_chat_id = ID_CHAT# –ò–ª–∏ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
    full_text = f"üìå @{username} –¥–æ–±–∞–≤–∏–ª –∑–∞–¥–∞—á—É: {text}"
    await send_message_with_reactions(message.bot, group_chat_id, full_text)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
async def get_user_tasks(user_id: int):
    return await get_user_active_tasks(user_id)


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ + –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —á–∞—Ç
async def complete_task_by_id(call: CallbackQuery):
    user_id = call.from_user.id
    username = call.from_user.username or call.from_user.full_name

    task_id = int(call.data.split(":")[1])
    task_text = await mark_task_complete(task_id, user_id)

    if task_text:
        await call.answer("–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ üéâ")
        text = f"‚úÖ @{username} –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞—á—É: {task_text}"
        await send_message_with_reactions(call.bot, ID_CHAT, text)
    else:
        await call.answer("–û—à–∏–±–∫–∞. –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", show_alert=True)


# –õ–∏–¥–µ—Ä–±–æ—Ä–¥
async def get_weekly_leaderboard():
    data = await get_leaderboard_data()
    if not data:
        return "–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ—á–∫–∞–º. üí§"

    text = "üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–¥–µ–ª–∏:\n"
    for i, row in enumerate(data, 1):
        text += f"{i}. {row['username']} ‚Äî {row['score']} –æ—á–∫–æ–≤\n"
    return text
