import asyncio
import os
import sys
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from reminders.weekly import start_reminders
from db.base import init_db, async_session_maker
from bot.handlers import register_handlers
from bot.reactions import router as reaction_router
from fastapi import FastAPI
import uvicorn

# ‚úÖ Windows loop fix
if sys.platform.startswith('win'):
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

# ‚úÖ FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI()

@app.get("/")
async def root():
    return {"status": "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"}

# ‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def start_bot():
    load_dotenv()

    BOT_TOKEN = os.getenv("BOT_TOKEN")
    CHAT_ID = os.getenv("CHAT_ID")

    print(f"üîê BOT_TOKEN: {BOT_TOKEN}")
    print(f"üí¨ CHAT_ID: {CHAT_ID}")

    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher(storage=MemoryStorage())

    dp.include_router(reaction_router)
    register_handlers(dp)

    await init_db()
    print("üõ†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    scheduler = AsyncIOScheduler(timezone="Europe/Belgrade")
    start_reminders(scheduler, bot, async_session_maker)
    print("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")

    print("‚úÖ Polling –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

# ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def run():
    loop = asyncio.get_event_loop()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∫–∞–∫ —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    loop.create_task(start_bot())

    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI –Ω–∞ —Ç–æ–º –∂–µ loop
    port = int(os.environ.get("PORT", 10000))
    config = uvicorn.Config(app=app, host="0.0.0.0", port=port, log_level="info")
    server = uvicorn.Server(config)

    print(f"üåê FastAPI –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    loop.run_until_complete(server.serve())

# ‚úÖ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    print("üèÅ –°—Ç–∞—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    try:
        run()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    finally:
        print("‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å")

